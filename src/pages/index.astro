---
import Layout from "@layouts/Layout.astro";
import Container from "@components/Container.astro";
import { SITE, HOME, SOCIALS } from "@consts";
import ArrowCard from "@components/ArrowCard.astro";
import Link from "@components/Link.astro";
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";

import { Image } from "astro:assets";
import indexImg from "../../src/assets/gifs/g1UX.gif";

const blog = (await getCollection("blog"))
  .filter((post) => !post.data.draft)
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())
  .slice(0, SITE.NUM_POSTS_ON_HOMEPAGE);

const projects: CollectionEntry<"projects">[] = (
  await getCollection("projects")
)
  .filter((project) => !project.data.draft)
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())
  .slice(0, SITE.NUM_PROJECTS_ON_HOMEPAGE);
---

<Layout title={HOME.TITLE} description={HOME.DESCRIPTION}>
  <Container>
    <aside data-pagefind-ignore>
      <div class="mb-6 mt-[-25px] relative">
        <Image src={indexImg} alt="gif-yw4rf" class="w-full h-60" />
        <h2 id="ipDisplay" class="text-[#44be2b] mt-[-9px] font-bold"></h2>
      </div>      
      <h1 class="font-semibold text-black dark:text-white">
        Estudiante de Redes Inform√°ticas | Cybersecurity | SOC | DFIR | Hands-on Penetration Testing | CTF Player
      </h1>
      <div class="space-y-14">
        <section>
          <article class="space-y-0">
            <span>
              <p>üíª Soy estudiante de Redes Inform√°ticas con formaci√≥n autodidacta en üõ°Ô∏è ciberseguridad, especializado en üîç detecci√≥n de intrusos y üß™ an√°lisis forense.
                Cuento con experiencia pr√°ctica en üß® penetration testing y üîß an√°lisis de sistemas.
                Resido en üìç Buenos Aires, Argentina.</p>
            </span>
          </article>
        </section>
        <section class="animate space-y-4">
          <h2 class="font-semibold text-black dark:text-white">
            ¬°Hablemos!
          </h2>
          <ul class="not-prose flex flex-col gap-2">
            <li>
              <Link
                href={`mailto:${SITE.EMAIL}`}
                aria-label={`Email ${SITE.TITLE}`}
              >
                {SITE.EMAIL}
              </Link>
            </li>
            {
              SOCIALS.map((SOCIAL) => (
                <li class="flex items-center gap-x-2">
                  <Link
                    href={SOCIAL.HREF}
                    external
                    aria-label={`${SITE.TITLE} on ${SOCIAL.NAME}`}
                    class="flex items-center gap-x-2"
                  >
                    <i class={SOCIAL.ICON}></i>
                    {SOCIAL.NAME}
                  </Link>
                </li>
              ))
            }
          </ul>
        </section>        

        <section class="animate space-y-6">
          <div class="flex flex-wrap items-center justify-between gap-y-2">
            <h2 class="font-semibold text-black dark:text-white">
              Ultimos posts
            </h2>
            <Link href="/blog"> Ver todos los posts </Link>
          </div>
          <ul class="not-prose flex flex-col gap-4">
            {
              blog.map((post) => (
                <li>
                  <ArrowCard entry={post} />
                </li>
              ))
            }
          </ul>
        </section>

        <section class="animate space-y-6">
          <div class="flex flex-wrap items-center justify-between gap-y-2">
            <h2 class="font-semibold text-black dark:text-white">
              Proyectos recientes
            </h2>
            <Link href="/projects"> Ver todos los proyectos </Link>
          </div>
          <ul class="not-prose flex flex-col gap-4">
            {
              projects.map((project) => (
                <li>
                  <ArrowCard entry={project} />
                </li>
              ))
            }
          </ul>
        </section>
      </div>
    </aside>
  </Container>
</Layout>
<script>
  async function getIp() {
    try {
        const response = await fetch('https://api.ipify.org?format=json');
        const data = await response.json();
        const ipDisplay = document.getElementById('ipDisplay');
        if (ipDisplay) {
            ipDisplay.innerHTML = `>> nc ${data.ip} 1717 -e sh`;
        }
    } catch (error) {
        console.error('Error al obtener la IP:', error);
    }
}

document.addEventListener('DOMContentLoaded', getIp);
</script>
<script src="https://kit.fontawesome.com/7679e0cb88.js" crossorigin="anonymous"></script>